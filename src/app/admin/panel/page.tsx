"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { supabase } from "@/lib/supabaseClient";
import { useAdminAuth } from "@/hooks/useAdminAuth";

interface ProposalData {
  id: number;
  question: string;
  answer: string | null;
  answered_at: string | null;
  created_at: string;
}

const AdminPanel: React.FC = () => {
  const router = useRouter();
  const { isAuthenticated, user, isLoading: authLoading, logout } = useAdminAuth();
  const [proposals, setProposals] = useState<ProposalData[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [selectedProposal, setSelectedProposal] = useState<ProposalData | null>(null);
  const [showConfirmDialog, setShowConfirmDialog] = useState<'reset' | 'delete' | null>(null);

  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ login page
  useEffect(() => {
    if (!authLoading && !isAuthenticated) {
      router.push('/admin/login');
    }
  }, [isAuthenticated, authLoading, router]);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  useEffect(() => {
    if (isAuthenticated) {
      loadProposals();
    }
  }, [isAuthenticated]);

  const loadProposals = async () => {
    setIsLoading(true);
    try {
      const { data, error } = await supabase
        .from("proposals")
        .select("*")
        .order("created_at", { ascending: false });

      if (error) {
        console.error("Error loading proposals:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        return;
      }

      setProposals(data || []);
    } catch (error) {
      console.error("Error:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    } finally {
      setIsLoading(false);
    }
  };

  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô answer ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô null)
  const resetAnswer = async (id: number) => {
    setIsLoading(true);
    try {
      const { error } = await supabase
        .from("proposals")
        .update({
          answer: null,
          answered_at: null,
        })
        .eq("id", id);

      if (error) {
        console.error("Error resetting answer:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï");
        return;
      }

      alert("‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      loadProposals(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    } catch (error) {
      console.error("Error:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    } finally {
      setIsLoading(false);
      setShowConfirmDialog(null);
    }
  };

  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const deleteProposal = async (id: number) => {
    setIsLoading(true);
    try {
      const { error } = await supabase
        .from("proposals")
        .delete()
        .eq("id", id);

      if (error) {
        console.error("Error deleting proposal:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö");
        return;
      }

      alert("‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      loadProposals(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    } catch (error) {
      console.error("Error:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    } finally {
      setIsLoading(false);
      setShowConfirmDialog(null);
    }
  };

  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const resetAllProposals = async () => {
    setIsLoading(true);
    try {
      const { error } = await supabase
        .from("proposals")
        .delete()
        .neq('id', 0); // ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

      if (error) {
        console.error("Error resetting all:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
        return;
      }

      alert("‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      loadProposals(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    } catch (error) {
      console.error("Error:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    } finally {
      setIsLoading(false);
      setShowConfirmDialog(null);
    }
  };

  const getStatusColor = (answer: string | null) => {
    if (!answer) return "bg-yellow-100 text-yellow-800";
    switch (answer) {
      case "‡∏ï‡∏Å‡∏•‡∏á": return "bg-green-100 text-green-800";
      case "‡∏Ç‡∏≠‡∏Ñ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô": return "bg-orange-100 text-orange-800";
      case "‡πÑ‡∏°‡πà‡∏ï‡∏Å‡∏•‡∏á": return "bg-red-100 text-red-800";
      default: return "bg-gray-100 text-gray-800";
    }
  };

  const getStatusIcon = (answer: string | null) => {
    if (!answer) return "‚è≥";
    switch (answer) {
      case "‡∏ï‡∏Å‡∏•‡∏á": return "üíö";
      case "‡∏Ç‡∏≠‡∏Ñ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô": return "ü§î";
      case "‡πÑ‡∏°‡πà‡∏ï‡∏Å‡∏•‡∏á": return "üíî";
      default: return "‚ùì";
    }
  };

  // ‡πÅ‡∏™‡∏î‡∏á loading ‡∏Ç‡∏ì‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö authentication
  if (authLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üîê</div>
          <p className="text-xl text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå...</p>
        </div>
      </div>
    );
  }

  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á (‡∏à‡∏∞ redirect ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
  if (!isAuthenticated) {
    return null;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
      {/* Navigation Space */}
      <div className="pt-16 sm:pt-24"></div>
      
      <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12">
        <div className="max-w-6xl mx-auto">
          
          {/* Admin Header */}
          <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-4 sm:p-6 mb-6">
            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
              <div className="flex items-center gap-3">
                <div className="text-3xl">üë®‚Äçüíº</div>
                <div>
                  <h2 className="text-xl font-bold text-gray-800">
                    ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö, {user?.username}
                  </h2>
                  <p className="text-sm text-gray-600">Admin Panel - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö</p>
                </div>
              </div>
              <button
                onClick={logout}
                className="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-semibold py-2 px-4 rounded-lg shadow-lg transform transition hover:scale-105"
              >
                üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
              </button>
            </div>
          </div>
          
          {/* Header */}
          <div className="text-center mb-8 sm:mb-12">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent mb-4 sm:mb-6">
              üîß Admin Panel üîß
            </h1>
            <p className="text-lg sm:text-xl text-gray-600 mb-6">
              ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô
            </p>
            <div className="text-4xl sm:text-5xl mb-6">‚öôÔ∏è</div>
          </div>

          {/* Control Buttons */}
          <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-6 mb-8">
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <button
                onClick={loadProposals}
                disabled={isLoading}
                className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transform transition hover:scale-105 disabled:opacity-50"
              >
                üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </button>
              
              <button
                onClick={() => setShowConfirmDialog('reset')}
                disabled={isLoading || proposals.length === 0}
                className="bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white font-semibold py-3 px-6 rounded-full shadow-lg transform transition hover:scale-105 disabled:opacity-50"
              >
                üóëÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </button>

              <button
                onClick={() => router.push('/proposal')}
                className="bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transform transition hover:scale-105"
              >
                üíï ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô
              </button>
            </div>
          </div>

          {/* Loading State */}
          {isLoading && (
            <div className="text-center py-8">
              <div className="text-4xl mb-4">‚è≥</div>
              <p className="text-lg text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
            </div>
          )}

          {/* Proposals List */}
          {!isLoading && (
            <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-6">
              <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">
                üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {proposals.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
              </h2>

              {proposals.length === 0 ? (
                <div className="text-center py-12">
                  <div className="text-6xl mb-4">üì≠</div>
                  <p className="text-xl text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô</p>
                  <p className="text-gray-400 mt-2">‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ü‡∏ô</p>
                </div>
              ) : (
                <div className="space-y-4">
                  {proposals.map((proposal) => (
                    <div
                      key={proposal.id}
                      className="border border-gray-200 rounded-xl p-4 sm:p-6 hover:shadow-lg transition-shadow"
                    >
                      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                        {/* Proposal Info */}
                        <div className="flex-1">
                          <div className="flex items-center gap-3 mb-2">
                            <span className="text-2xl">{getStatusIcon(proposal.answer)}</span>
                            <h3 className="text-lg font-semibold text-gray-800">
                              #{proposal.id} {proposal.question}
                            </h3>
                          </div>
                          
                          <div className="flex flex-wrap gap-2 mb-3">
                            <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(proposal.answer)}`}>
                              {proposal.answer ? `‡∏ï‡∏≠‡∏ö: ${proposal.answer}` : '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö'}
                            </span>
                          </div>

                          <div className="text-sm text-gray-500 space-y-1">
                            <p>üìÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: {new Date(proposal.created_at).toLocaleString('th-TH')}</p>
                            {proposal.answered_at && (
                              <p>‚úÖ ‡∏ï‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠: {new Date(proposal.answered_at).toLocaleString('th-TH')}</p>
                            )}
                          </div>
                        </div>

                        {/* Action Buttons */}
                        <div className="flex flex-col sm:flex-row gap-2">
                          {proposal.answer && (
                            <button
                              onClick={() => {
                                setSelectedProposal(proposal);
                                setShowConfirmDialog('reset');
                              }}
                              disabled={isLoading}
                              className="bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white font-medium py-2 px-4 rounded-lg shadow transition hover:scale-105 disabled:opacity-50 text-sm"
                            >
                              üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
                            </button>
                          )}
                          
                          <button
                            onClick={() => {
                              setSelectedProposal(proposal);
                              setShowConfirmDialog('delete');
                            }}
                            disabled={isLoading}
                            className="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-medium py-2 px-4 rounded-lg shadow transition hover:scale-105 disabled:opacity-50 text-sm"
                          >
                            üóëÔ∏è ‡∏•‡∏ö
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          )}

          {/* Confirm Dialog */}
          {showConfirmDialog && (
            <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
              <div className="bg-white rounded-2xl p-6 max-w-md w-full mx-4">
                <div className="text-center">
                  <div className="text-4xl mb-4">
                    {showConfirmDialog === 'reset' ? '‚ö†Ô∏è' : 'üóëÔ∏è'}
                  </div>
                  <h3 className="text-xl font-bold text-gray-800 mb-4">
                    {showConfirmDialog === 'reset' 
                      ? (selectedProposal ? '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö' : '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î')
                      : '‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
                    }
                  </h3>
                  <p className="text-gray-600 mb-6">
                    {showConfirmDialog === 'reset' 
                      ? (selectedProposal 
                          ? `‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á "${selectedProposal.question}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`
                          : '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ!'
                        )
                      : `‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö "${selectedProposal?.question}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ!`
                    }
                  </p>
                  
                  <div className="flex gap-3 justify-center">
                    <button
                      onClick={() => {
                        setShowConfirmDialog(null);
                        setSelectedProposal(null);
                      }}
                      className="bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-6 rounded-lg transition"
                    >
                      ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                    <button
                      onClick={() => {
                        if (showConfirmDialog === 'reset') {
                          if (selectedProposal) {
                            resetAnswer(selectedProposal.id);
                          } else {
                            resetAllProposals();
                          }
                        } else if (selectedProposal) {
                          deleteProposal(selectedProposal.id);
                        }
                      }}
                      disabled={isLoading}
                      className="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-medium py-2 px-6 rounded-lg transition disabled:opacity-50"
                    >
                      {showConfirmDialog === 'reset' ? '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï' : '‡∏•‡∏ö'}
                    </button>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Back Button */}
          <div className="mt-8 text-center">
            <button
              onClick={() => router.push('/')}
              className="bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white font-semibold py-3 px-8 rounded-full shadow-lg transform transition hover:scale-105"
            >
              üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </button>
          </div>

        </div>
      </div>
    </div>
  );
};

export default AdminPanel;
